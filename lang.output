Terminals unused in grammar

    T_Func
    T_OpenCloseParen
    T_Quote
    T_Dot
    T_BackSlash
    T_UnderScore
    T_Percent
    T_ComercialAND
    T_Return
    T_Biblioteca


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 lines

    3 lines: lines line
    4      | %empty

    5 line: T_EndLine
    6     | variable_declaration T_DotComma
    7     | attribution T_DotComma
    8     | function_usage T_DotComma
    9     | logical_structure
   10     | import T_DotComma
   11     | T_Comment
   12     | print
   13     | T_ReadLine T_OpenParen T_Identificador T_CloseParen T_DotComma

   14 import: T_Import T_Identificador

   15 $@2: %empty

   16 variable_declaration: T_Let T_Identificador $@2 T_Equals variable
   17                     | T_Const T_Identificador T_Equals variable

   18 attribution: T_Identificador attribution_right

   19 attribution_right: T_Equals variable
   20                  | T_Plus T_Equals variable
   21                  | T_Minus T_Equals variable
   22                  | T_Divide T_Equals variable
   23                  | T_Times T_Equals variable
   24                  | T_Plus T_Plus
   25                  | T_Minus T_Minus

   26 function_usage: T_Identificador T_OpenParen optional_params T_CloseParen

   27 logical_structure: structure_for
   28                  | structure_while
   29                  | structure_do T_DotComma
   30                  | structure_if structure_else
   31                  | structure_switch

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type T_Comma type T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

   33 $@3: %empty

   34 structure_if: T_If T_OpenSquareBracket logical_expression T_CloseSquareBracket $@3 T_OpenBracket lines T_CloseBracket

   35 structure_else: T_Else T_OpenBracket lines T_CloseBracket
   36               | %empty

   37 structure_switch: T_Switch T_OpenSquareBracket T_Identificador T_CloseSquareBracket T_OpenBracket structure_cases structure_default T_CloseBracket

   38 structure_cases: structure_cases structure_case
   39                | %empty

   40 structure_case: T_Case T_OpenSquareBracket type T_CloseSquareBracket T_OpenBracket lines T_CloseBracket T_EndLine
   41               | line

   42 structure_default: T_Default T_OpenBracket lines T_CloseBracket T_EndLine

   43 $@4: %empty

   44 $@5: %empty

   45 structure_while: T_While T_OpenSquareBracket $@4 logical_expression T_CloseSquareBracket $@5 T_OpenBracket lines T_CloseBracket

   46 $@6: %empty

   47 structure_do: T_Do T_OpenBracket lines T_CloseBracket T_While T_OpenSquareBracket $@6 logical_expression T_CloseSquareBracket

   48 $@7: %empty

   49 print: T_Print T_OpenParen $@7 variable T_CloseParen T_DotComma

   50 logical_expression: expression T_EqualsEQ expression
   51                   | expression T_NegativeEquals expression
   52                   | expression T_BiggerThan expression
   53                   | expression T_SmallerThan expression
   54                   | expression T_BiggerThanEQ expression
   55                   | expression T_SmallerThanEQ expression
   56                   | expression T_Or expression
   57                   | expression T_And expression
   58                   | T_Not expression

   59 variable: T_String
   60         | expression
   61         | function_usage

   62 expression: type
   63           | expression T_Plus expression
   64           | expression T_Minus expression
   65           | expression T_Times expression
   66           | expression T_Divide expression
   67           | T_Minus expression
   68           | expression T_Power expression
   69           | T_OpenParen expression T_CloseParen

   70 type: T_IntValue
   71     | T_FloatValue
   72     | T_Identificador

   73 optional_params: T_String
   74                | T_Identificador
   75                | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_Let (258) 16
    T_Import (259) 14
    T_Func (260)
    T_Print (261) 49
    T_ReadLine (262) 13
    T_OpenParen (263) 13 26 32 49 69
    T_CloseParen (264) 13 26 32 49 69
    T_OpenCloseParen (265)
    T_OpenBracket (266) 32 34 35 37 40 42 45 47
    T_CloseBracket (267) 32 34 35 37 40 42 45 47
    T_Comma (268) 32
    T_Quote (269)
    T_DotComma (270) 6 7 8 10 13 29 49
    T_doubleDot (271) 32
    T_Dot (272)
    T_For (273) 32
    T_If (274) 34
    T_While (275) 45 47
    T_Else (276) 35
    T_Switch (277) 37
    T_Case (278) 40
    T_Default (279) 42
    T_Do (280) 47
    T_OpenSquareBracket (281) 32 34 37 40 45 47
    T_BackSlash (282)
    T_CloseSquareBracket (283) 32 34 37 40 45 47
    T_Equals (284) 16 17 19 20 21 22 23
    T_UnderScore (285)
    T_Percent (286)
    T_ComercialAND (287)
    T_Return (288)
    T_Const (289) 17
    T_EndLine (290) 5 40 42
    T_Comment (291) 11
    T_Not (292) 58
    T_EqualsEQ (293) 50
    T_NegativeEquals (294) 51
    T_Or (295) 56
    T_And (296) 57
    T_SmallerThan (297) 53
    T_SmallerThanEQ (298) 55
    T_BiggerThan (299) 52
    T_BiggerThanEQ (300) 54
    T_IntValue <ival> (301) 70
    T_FloatValue <fval> (302) 71
    T_String <sval> (303) 59 73
    T_Biblioteca <sval> (304)
    T_Identificador <sval> (305) 13 14 16 17 18 26 32 37 72 74
    T_Minus (306) 21 25 64 67
    T_Plus (307) 20 24 63
    T_Divide (308) 22 66
    T_Times (309) 23 65
    T_Negative (310)
    T_Power (311) 68


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program (58)
        on left: 2
        on right: 0
    $@1 (59)
        on left: 1
        on right: 2
    lines (60)
        on left: 3 4
        on right: 2 3 32 34 35 40 42 45 47
    line (61)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 3 41
    import (62)
        on left: 14
        on right: 10
    variable_declaration (63)
        on left: 16 17
        on right: 6
    $@2 (64)
        on left: 15
        on right: 16
    attribution (65)
        on left: 18
        on right: 7
    attribution_right (66)
        on left: 19 20 21 22 23 24 25
        on right: 18
    function_usage (67)
        on left: 26
        on right: 8 61
    logical_structure (68)
        on left: 27 28 29 30 31
        on right: 9
    structure_for (69)
        on left: 32
        on right: 27
    structure_if (70)
        on left: 34
        on right: 30
    $@3 (71)
        on left: 33
        on right: 34
    structure_else (72)
        on left: 35 36
        on right: 30
    structure_switch (73)
        on left: 37
        on right: 31
    structure_cases (74)
        on left: 38 39
        on right: 37 38
    structure_case (75)
        on left: 40 41
        on right: 38
    structure_default (76)
        on left: 42
        on right: 37
    structure_while <cval> (77)
        on left: 45
        on right: 28
    $@4 (78)
        on left: 43
        on right: 45
    $@5 (79)
        on left: 44
        on right: 45
    structure_do (80)
        on left: 47
        on right: 29
    $@6 (81)
        on left: 46
        on right: 47
    print <ival> (82)
        on left: 49
        on right: 12
    $@7 (83)
        on left: 48
        on right: 49
    logical_expression <ival> (84)
        on left: 50 51 52 53 54 55 56 57 58
        on right: 34 45 47
    variable (85)
        on left: 59 60 61
        on right: 16 17 19 20 21 22 23 49
    expression <fval> (86)
        on left: 62 63 64 65 66 67 68 69
        on right: 50 51 52 53 54 55 56 57 58 60 63 64 65 66 67 68 69
    type <fval> (87)
        on left: 70 71 72
        on right: 32 40 62
    optional_params (88)
        on left: 73 74 75
        on right: 26


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . lines

    $default  reduce using rule 4 (lines)

    lines  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 lines .
    3 lines: lines . line

    T_Let            shift, and go to state 5
    T_Import         shift, and go to state 6
    T_Print          shift, and go to state 7
    T_ReadLine       shift, and go to state 8
    T_For            shift, and go to state 9
    T_If             shift, and go to state 10
    T_While          shift, and go to state 11
    T_Switch         shift, and go to state 12
    T_Do             shift, and go to state 13
    T_Const          shift, and go to state 14
    T_EndLine        shift, and go to state 15
    T_Comment        shift, and go to state 16
    T_Identificador  shift, and go to state 17

    $default  reduce using rule 2 (program)

    line                  go to state 18
    import                go to state 19
    variable_declaration  go to state 20
    attribution           go to state 21
    function_usage        go to state 22
    logical_structure     go to state 23
    structure_for         go to state 24
    structure_if          go to state 25
    structure_switch      go to state 26
    structure_while       go to state 27
    structure_do          go to state 28
    print                 go to state 29


State 5

   16 variable_declaration: T_Let . T_Identificador $@2 T_Equals variable

    T_Identificador  shift, and go to state 30


State 6

   14 import: T_Import . T_Identificador

    T_Identificador  shift, and go to state 31


State 7

   49 print: T_Print . T_OpenParen $@7 variable T_CloseParen T_DotComma

    T_OpenParen  shift, and go to state 32


State 8

   13 line: T_ReadLine . T_OpenParen T_Identificador T_CloseParen T_DotComma

    T_OpenParen  shift, and go to state 33


State 9

   32 structure_for: T_For . T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type T_Comma type T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

    T_OpenSquareBracket  shift, and go to state 34


State 10

   34 structure_if: T_If . T_OpenSquareBracket logical_expression T_CloseSquareBracket $@3 T_OpenBracket lines T_CloseBracket

    T_OpenSquareBracket  shift, and go to state 35


State 11

   45 structure_while: T_While . T_OpenSquareBracket $@4 logical_expression T_CloseSquareBracket $@5 T_OpenBracket lines T_CloseBracket

    T_OpenSquareBracket  shift, and go to state 36


State 12

   37 structure_switch: T_Switch . T_OpenSquareBracket T_Identificador T_CloseSquareBracket T_OpenBracket structure_cases structure_default T_CloseBracket

    T_OpenSquareBracket  shift, and go to state 37


State 13

   47 structure_do: T_Do . T_OpenBracket lines T_CloseBracket T_While T_OpenSquareBracket $@6 logical_expression T_CloseSquareBracket

    T_OpenBracket  shift, and go to state 38


State 14

   17 variable_declaration: T_Const . T_Identificador T_Equals variable

    T_Identificador  shift, and go to state 39


State 15

    5 line: T_EndLine .

    $default  reduce using rule 5 (line)


State 16

   11 line: T_Comment .

    $default  reduce using rule 11 (line)


State 17

   18 attribution: T_Identificador . attribution_right
   26 function_usage: T_Identificador . T_OpenParen optional_params T_CloseParen

    T_OpenParen  shift, and go to state 40
    T_Equals     shift, and go to state 41
    T_Minus      shift, and go to state 42
    T_Plus       shift, and go to state 43
    T_Divide     shift, and go to state 44
    T_Times      shift, and go to state 45

    attribution_right  go to state 46


State 18

    3 lines: lines line .

    $default  reduce using rule 3 (lines)


State 19

   10 line: import . T_DotComma

    T_DotComma  shift, and go to state 47


State 20

    6 line: variable_declaration . T_DotComma

    T_DotComma  shift, and go to state 48


State 21

    7 line: attribution . T_DotComma

    T_DotComma  shift, and go to state 49


State 22

    8 line: function_usage . T_DotComma

    T_DotComma  shift, and go to state 50


State 23

    9 line: logical_structure .

    $default  reduce using rule 9 (line)


State 24

   27 logical_structure: structure_for .

    $default  reduce using rule 27 (logical_structure)


State 25

   30 logical_structure: structure_if . structure_else

    T_Else  shift, and go to state 51

    $default  reduce using rule 36 (structure_else)

    structure_else  go to state 52


State 26

   31 logical_structure: structure_switch .

    $default  reduce using rule 31 (logical_structure)


State 27

   28 logical_structure: structure_while .

    $default  reduce using rule 28 (logical_structure)


State 28

   29 logical_structure: structure_do . T_DotComma

    T_DotComma  shift, and go to state 53


State 29

   12 line: print .

    $default  reduce using rule 12 (line)


State 30

   16 variable_declaration: T_Let T_Identificador . $@2 T_Equals variable

    $default  reduce using rule 15 ($@2)

    $@2  go to state 54


State 31

   14 import: T_Import T_Identificador .

    $default  reduce using rule 14 (import)


State 32

   49 print: T_Print T_OpenParen . $@7 variable T_CloseParen T_DotComma

    $default  reduce using rule 48 ($@7)

    $@7  go to state 55


State 33

   13 line: T_ReadLine T_OpenParen . T_Identificador T_CloseParen T_DotComma

    T_Identificador  shift, and go to state 56


State 34

   32 structure_for: T_For T_OpenSquareBracket . T_Identificador T_doubleDot T_OpenParen type T_Comma type T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

    T_Identificador  shift, and go to state 57


State 35

   34 structure_if: T_If T_OpenSquareBracket . logical_expression T_CloseSquareBracket $@3 T_OpenBracket lines T_CloseBracket

    T_OpenParen      shift, and go to state 58
    T_Not            shift, and go to state 59
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    logical_expression  go to state 64
    expression          go to state 65
    type                go to state 66


State 36

   45 structure_while: T_While T_OpenSquareBracket . $@4 logical_expression T_CloseSquareBracket $@5 T_OpenBracket lines T_CloseBracket

    $default  reduce using rule 43 ($@4)

    $@4  go to state 67


State 37

   37 structure_switch: T_Switch T_OpenSquareBracket . T_Identificador T_CloseSquareBracket T_OpenBracket structure_cases structure_default T_CloseBracket

    T_Identificador  shift, and go to state 68


State 38

   47 structure_do: T_Do T_OpenBracket . lines T_CloseBracket T_While T_OpenSquareBracket $@6 logical_expression T_CloseSquareBracket

    $default  reduce using rule 4 (lines)

    lines  go to state 69


State 39

   17 variable_declaration: T_Const T_Identificador . T_Equals variable

    T_Equals  shift, and go to state 70


State 40

   26 function_usage: T_Identificador T_OpenParen . optional_params T_CloseParen

    T_String         shift, and go to state 71
    T_Identificador  shift, and go to state 72

    $default  reduce using rule 75 (optional_params)

    optional_params  go to state 73


State 41

   19 attribution_right: T_Equals . variable

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_String         shift, and go to state 74
    T_Identificador  shift, and go to state 75
    T_Minus          shift, and go to state 63

    function_usage  go to state 76
    variable        go to state 77
    expression      go to state 78
    type            go to state 66


State 42

   21 attribution_right: T_Minus . T_Equals variable
   25                  | T_Minus . T_Minus

    T_Equals  shift, and go to state 79
    T_Minus   shift, and go to state 80


State 43

   20 attribution_right: T_Plus . T_Equals variable
   24                  | T_Plus . T_Plus

    T_Equals  shift, and go to state 81
    T_Plus    shift, and go to state 82


State 44

   22 attribution_right: T_Divide . T_Equals variable

    T_Equals  shift, and go to state 83


State 45

   23 attribution_right: T_Times . T_Equals variable

    T_Equals  shift, and go to state 84


State 46

   18 attribution: T_Identificador attribution_right .

    $default  reduce using rule 18 (attribution)


State 47

   10 line: import T_DotComma .

    $default  reduce using rule 10 (line)


State 48

    6 line: variable_declaration T_DotComma .

    $default  reduce using rule 6 (line)


State 49

    7 line: attribution T_DotComma .

    $default  reduce using rule 7 (line)


State 50

    8 line: function_usage T_DotComma .

    $default  reduce using rule 8 (line)


State 51

   35 structure_else: T_Else . T_OpenBracket lines T_CloseBracket

    T_OpenBracket  shift, and go to state 85


State 52

   30 logical_structure: structure_if structure_else .

    $default  reduce using rule 30 (logical_structure)


State 53

   29 logical_structure: structure_do T_DotComma .

    $default  reduce using rule 29 (logical_structure)


State 54

   16 variable_declaration: T_Let T_Identificador $@2 . T_Equals variable

    T_Equals  shift, and go to state 86


State 55

   49 print: T_Print T_OpenParen $@7 . variable T_CloseParen T_DotComma

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_String         shift, and go to state 74
    T_Identificador  shift, and go to state 75
    T_Minus          shift, and go to state 63

    function_usage  go to state 76
    variable        go to state 87
    expression      go to state 78
    type            go to state 66


State 56

   13 line: T_ReadLine T_OpenParen T_Identificador . T_CloseParen T_DotComma

    T_CloseParen  shift, and go to state 88


State 57

   32 structure_for: T_For T_OpenSquareBracket T_Identificador . T_doubleDot T_OpenParen type T_Comma type T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

    T_doubleDot  shift, and go to state 89


State 58

   69 expression: T_OpenParen . expression T_CloseParen

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 90
    type        go to state 66


State 59

   58 logical_expression: T_Not . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 91
    type        go to state 66


State 60

   70 type: T_IntValue .

    $default  reduce using rule 70 (type)


State 61

   71 type: T_FloatValue .

    $default  reduce using rule 71 (type)


State 62

   72 type: T_Identificador .

    $default  reduce using rule 72 (type)


State 63

   67 expression: T_Minus . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 92
    type        go to state 66


State 64

   34 structure_if: T_If T_OpenSquareBracket logical_expression . T_CloseSquareBracket $@3 T_OpenBracket lines T_CloseBracket

    T_CloseSquareBracket  shift, and go to state 93


State 65

   50 logical_expression: expression . T_EqualsEQ expression
   51                   | expression . T_NegativeEquals expression
   52                   | expression . T_BiggerThan expression
   53                   | expression . T_SmallerThan expression
   54                   | expression . T_BiggerThanEQ expression
   55                   | expression . T_SmallerThanEQ expression
   56                   | expression . T_Or expression
   57                   | expression . T_And expression
   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_EqualsEQ        shift, and go to state 94
    T_NegativeEquals  shift, and go to state 95
    T_Or              shift, and go to state 96
    T_And             shift, and go to state 97
    T_SmallerThan     shift, and go to state 98
    T_SmallerThanEQ   shift, and go to state 99
    T_BiggerThan      shift, and go to state 100
    T_BiggerThanEQ    shift, and go to state 101
    T_Minus           shift, and go to state 102
    T_Plus            shift, and go to state 103
    T_Divide          shift, and go to state 104
    T_Times           shift, and go to state 105
    T_Power           shift, and go to state 106


State 66

   62 expression: type .

    $default  reduce using rule 62 (expression)


State 67

   45 structure_while: T_While T_OpenSquareBracket $@4 . logical_expression T_CloseSquareBracket $@5 T_OpenBracket lines T_CloseBracket

    T_OpenParen      shift, and go to state 58
    T_Not            shift, and go to state 59
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    logical_expression  go to state 107
    expression          go to state 65
    type                go to state 66


State 68

   37 structure_switch: T_Switch T_OpenSquareBracket T_Identificador . T_CloseSquareBracket T_OpenBracket structure_cases structure_default T_CloseBracket

    T_CloseSquareBracket  shift, and go to state 108


State 69

    3 lines: lines . line
   47 structure_do: T_Do T_OpenBracket lines . T_CloseBracket T_While T_OpenSquareBracket $@6 logical_expression T_CloseSquareBracket

    T_Let            shift, and go to state 5
    T_Import         shift, and go to state 6
    T_Print          shift, and go to state 7
    T_ReadLine       shift, and go to state 8
    T_CloseBracket   shift, and go to state 109
    T_For            shift, and go to state 9
    T_If             shift, and go to state 10
    T_While          shift, and go to state 11
    T_Switch         shift, and go to state 12
    T_Do             shift, and go to state 13
    T_Const          shift, and go to state 14
    T_EndLine        shift, and go to state 15
    T_Comment        shift, and go to state 16
    T_Identificador  shift, and go to state 17

    line                  go to state 18
    import                go to state 19
    variable_declaration  go to state 20
    attribution           go to state 21
    function_usage        go to state 22
    logical_structure     go to state 23
    structure_for         go to state 24
    structure_if          go to state 25
    structure_switch      go to state 26
    structure_while       go to state 27
    structure_do          go to state 28
    print                 go to state 29


State 70

   17 variable_declaration: T_Const T_Identificador T_Equals . variable

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_String         shift, and go to state 74
    T_Identificador  shift, and go to state 75
    T_Minus          shift, and go to state 63

    function_usage  go to state 76
    variable        go to state 110
    expression      go to state 78
    type            go to state 66


State 71

   73 optional_params: T_String .

    $default  reduce using rule 73 (optional_params)


State 72

   74 optional_params: T_Identificador .

    $default  reduce using rule 74 (optional_params)


State 73

   26 function_usage: T_Identificador T_OpenParen optional_params . T_CloseParen

    T_CloseParen  shift, and go to state 111


State 74

   59 variable: T_String .

    $default  reduce using rule 59 (variable)


State 75

   26 function_usage: T_Identificador . T_OpenParen optional_params T_CloseParen
   72 type: T_Identificador .

    T_OpenParen  shift, and go to state 40

    $default  reduce using rule 72 (type)


State 76

   61 variable: function_usage .

    $default  reduce using rule 61 (variable)


State 77

   19 attribution_right: T_Equals variable .

    $default  reduce using rule 19 (attribution_right)


State 78

   60 variable: expression .
   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Minus   shift, and go to state 102
    T_Plus    shift, and go to state 103
    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 60 (variable)


State 79

   21 attribution_right: T_Minus T_Equals . variable

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_String         shift, and go to state 74
    T_Identificador  shift, and go to state 75
    T_Minus          shift, and go to state 63

    function_usage  go to state 76
    variable        go to state 112
    expression      go to state 78
    type            go to state 66


State 80

   25 attribution_right: T_Minus T_Minus .

    $default  reduce using rule 25 (attribution_right)


State 81

   20 attribution_right: T_Plus T_Equals . variable

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_String         shift, and go to state 74
    T_Identificador  shift, and go to state 75
    T_Minus          shift, and go to state 63

    function_usage  go to state 76
    variable        go to state 113
    expression      go to state 78
    type            go to state 66


State 82

   24 attribution_right: T_Plus T_Plus .

    $default  reduce using rule 24 (attribution_right)


State 83

   22 attribution_right: T_Divide T_Equals . variable

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_String         shift, and go to state 74
    T_Identificador  shift, and go to state 75
    T_Minus          shift, and go to state 63

    function_usage  go to state 76
    variable        go to state 114
    expression      go to state 78
    type            go to state 66


State 84

   23 attribution_right: T_Times T_Equals . variable

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_String         shift, and go to state 74
    T_Identificador  shift, and go to state 75
    T_Minus          shift, and go to state 63

    function_usage  go to state 76
    variable        go to state 115
    expression      go to state 78
    type            go to state 66


State 85

   35 structure_else: T_Else T_OpenBracket . lines T_CloseBracket

    $default  reduce using rule 4 (lines)

    lines  go to state 116


State 86

   16 variable_declaration: T_Let T_Identificador $@2 T_Equals . variable

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_String         shift, and go to state 74
    T_Identificador  shift, and go to state 75
    T_Minus          shift, and go to state 63

    function_usage  go to state 76
    variable        go to state 117
    expression      go to state 78
    type            go to state 66


State 87

   49 print: T_Print T_OpenParen $@7 variable . T_CloseParen T_DotComma

    T_CloseParen  shift, and go to state 118


State 88

   13 line: T_ReadLine T_OpenParen T_Identificador T_CloseParen . T_DotComma

    T_DotComma  shift, and go to state 119


State 89

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot . T_OpenParen type T_Comma type T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

    T_OpenParen  shift, and go to state 120


State 90

   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression
   69           | T_OpenParen expression . T_CloseParen

    T_CloseParen  shift, and go to state 121
    T_Minus       shift, and go to state 102
    T_Plus        shift, and go to state 103
    T_Divide      shift, and go to state 104
    T_Times       shift, and go to state 105
    T_Power       shift, and go to state 106


State 91

   58 logical_expression: T_Not expression .
   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Minus   shift, and go to state 102
    T_Plus    shift, and go to state 103
    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 58 (logical_expression)


State 92

   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   67           | T_Minus expression .
   68           | expression . T_Power expression

    T_Power  shift, and go to state 106

    $default  reduce using rule 67 (expression)


State 93

   34 structure_if: T_If T_OpenSquareBracket logical_expression T_CloseSquareBracket . $@3 T_OpenBracket lines T_CloseBracket

    $default  reduce using rule 33 ($@3)

    $@3  go to state 122


State 94

   50 logical_expression: expression T_EqualsEQ . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 123
    type        go to state 66


State 95

   51 logical_expression: expression T_NegativeEquals . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 124
    type        go to state 66


State 96

   56 logical_expression: expression T_Or . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 125
    type        go to state 66


State 97

   57 logical_expression: expression T_And . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 126
    type        go to state 66


State 98

   53 logical_expression: expression T_SmallerThan . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 127
    type        go to state 66


State 99

   55 logical_expression: expression T_SmallerThanEQ . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 128
    type        go to state 66


State 100

   52 logical_expression: expression T_BiggerThan . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 129
    type        go to state 66


State 101

   54 logical_expression: expression T_BiggerThanEQ . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 130
    type        go to state 66


State 102

   64 expression: expression T_Minus . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 131
    type        go to state 66


State 103

   63 expression: expression T_Plus . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 132
    type        go to state 66


State 104

   66 expression: expression T_Divide . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 133
    type        go to state 66


State 105

   65 expression: expression T_Times . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 134
    type        go to state 66


State 106

   68 expression: expression T_Power . expression

    T_OpenParen      shift, and go to state 58
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    expression  go to state 135
    type        go to state 66


State 107

   45 structure_while: T_While T_OpenSquareBracket $@4 logical_expression . T_CloseSquareBracket $@5 T_OpenBracket lines T_CloseBracket

    T_CloseSquareBracket  shift, and go to state 136


State 108

   37 structure_switch: T_Switch T_OpenSquareBracket T_Identificador T_CloseSquareBracket . T_OpenBracket structure_cases structure_default T_CloseBracket

    T_OpenBracket  shift, and go to state 137


State 109

   47 structure_do: T_Do T_OpenBracket lines T_CloseBracket . T_While T_OpenSquareBracket $@6 logical_expression T_CloseSquareBracket

    T_While  shift, and go to state 138


State 110

   17 variable_declaration: T_Const T_Identificador T_Equals variable .

    $default  reduce using rule 17 (variable_declaration)


State 111

   26 function_usage: T_Identificador T_OpenParen optional_params T_CloseParen .

    $default  reduce using rule 26 (function_usage)


State 112

   21 attribution_right: T_Minus T_Equals variable .

    $default  reduce using rule 21 (attribution_right)


State 113

   20 attribution_right: T_Plus T_Equals variable .

    $default  reduce using rule 20 (attribution_right)


State 114

   22 attribution_right: T_Divide T_Equals variable .

    $default  reduce using rule 22 (attribution_right)


State 115

   23 attribution_right: T_Times T_Equals variable .

    $default  reduce using rule 23 (attribution_right)


State 116

    3 lines: lines . line
   35 structure_else: T_Else T_OpenBracket lines . T_CloseBracket

    T_Let            shift, and go to state 5
    T_Import         shift, and go to state 6
    T_Print          shift, and go to state 7
    T_ReadLine       shift, and go to state 8
    T_CloseBracket   shift, and go to state 139
    T_For            shift, and go to state 9
    T_If             shift, and go to state 10
    T_While          shift, and go to state 11
    T_Switch         shift, and go to state 12
    T_Do             shift, and go to state 13
    T_Const          shift, and go to state 14
    T_EndLine        shift, and go to state 15
    T_Comment        shift, and go to state 16
    T_Identificador  shift, and go to state 17

    line                  go to state 18
    import                go to state 19
    variable_declaration  go to state 20
    attribution           go to state 21
    function_usage        go to state 22
    logical_structure     go to state 23
    structure_for         go to state 24
    structure_if          go to state 25
    structure_switch      go to state 26
    structure_while       go to state 27
    structure_do          go to state 28
    print                 go to state 29


State 117

   16 variable_declaration: T_Let T_Identificador $@2 T_Equals variable .

    $default  reduce using rule 16 (variable_declaration)


State 118

   49 print: T_Print T_OpenParen $@7 variable T_CloseParen . T_DotComma

    T_DotComma  shift, and go to state 140


State 119

   13 line: T_ReadLine T_OpenParen T_Identificador T_CloseParen T_DotComma .

    $default  reduce using rule 13 (line)


State 120

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen . type T_Comma type T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62

    type  go to state 141


State 121

   69 expression: T_OpenParen expression T_CloseParen .

    $default  reduce using rule 69 (expression)


State 122

   34 structure_if: T_If T_OpenSquareBracket logical_expression T_CloseSquareBracket $@3 . T_OpenBracket lines T_CloseBracket

    T_OpenBracket  shift, and go to state 142


State 123

   50 logical_expression: expression T_EqualsEQ expression .
   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Minus   shift, and go to state 102
    T_Plus    shift, and go to state 103
    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 50 (logical_expression)


State 124

   51 logical_expression: expression T_NegativeEquals expression .
   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Minus   shift, and go to state 102
    T_Plus    shift, and go to state 103
    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 51 (logical_expression)


State 125

   56 logical_expression: expression T_Or expression .
   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Minus   shift, and go to state 102
    T_Plus    shift, and go to state 103
    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 56 (logical_expression)


State 126

   57 logical_expression: expression T_And expression .
   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Minus   shift, and go to state 102
    T_Plus    shift, and go to state 103
    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 57 (logical_expression)


State 127

   53 logical_expression: expression T_SmallerThan expression .
   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Minus   shift, and go to state 102
    T_Plus    shift, and go to state 103
    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 53 (logical_expression)


State 128

   55 logical_expression: expression T_SmallerThanEQ expression .
   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Minus   shift, and go to state 102
    T_Plus    shift, and go to state 103
    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 55 (logical_expression)


State 129

   52 logical_expression: expression T_BiggerThan expression .
   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Minus   shift, and go to state 102
    T_Plus    shift, and go to state 103
    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 52 (logical_expression)


State 130

   54 logical_expression: expression T_BiggerThanEQ expression .
   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Minus   shift, and go to state 102
    T_Plus    shift, and go to state 103
    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 54 (logical_expression)


State 131

   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   64           | expression T_Minus expression .
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 64 (expression)


State 132

   63 expression: expression . T_Plus expression
   63           | expression T_Plus expression .
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Divide  shift, and go to state 104
    T_Times   shift, and go to state 105
    T_Power   shift, and go to state 106

    $default  reduce using rule 63 (expression)


State 133

   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   66           | expression T_Divide expression .
   68           | expression . T_Power expression

    T_Power  shift, and go to state 106

    $default  reduce using rule 66 (expression)


State 134

   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   65           | expression T_Times expression .
   66           | expression . T_Divide expression
   68           | expression . T_Power expression

    T_Power  shift, and go to state 106

    $default  reduce using rule 65 (expression)


State 135

   63 expression: expression . T_Plus expression
   64           | expression . T_Minus expression
   65           | expression . T_Times expression
   66           | expression . T_Divide expression
   68           | expression . T_Power expression
   68           | expression T_Power expression .

    T_Power  shift, and go to state 106

    $default  reduce using rule 68 (expression)


State 136

   45 structure_while: T_While T_OpenSquareBracket $@4 logical_expression T_CloseSquareBracket . $@5 T_OpenBracket lines T_CloseBracket

    $default  reduce using rule 44 ($@5)

    $@5  go to state 143


State 137

   37 structure_switch: T_Switch T_OpenSquareBracket T_Identificador T_CloseSquareBracket T_OpenBracket . structure_cases structure_default T_CloseBracket

    $default  reduce using rule 39 (structure_cases)

    structure_cases  go to state 144


State 138

   47 structure_do: T_Do T_OpenBracket lines T_CloseBracket T_While . T_OpenSquareBracket $@6 logical_expression T_CloseSquareBracket

    T_OpenSquareBracket  shift, and go to state 145


State 139

   35 structure_else: T_Else T_OpenBracket lines T_CloseBracket .

    $default  reduce using rule 35 (structure_else)


State 140

   49 print: T_Print T_OpenParen $@7 variable T_CloseParen T_DotComma .

    $default  reduce using rule 49 (print)


State 141

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type . T_Comma type T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

    T_Comma  shift, and go to state 146


State 142

   34 structure_if: T_If T_OpenSquareBracket logical_expression T_CloseSquareBracket $@3 T_OpenBracket . lines T_CloseBracket

    $default  reduce using rule 4 (lines)

    lines  go to state 147


State 143

   45 structure_while: T_While T_OpenSquareBracket $@4 logical_expression T_CloseSquareBracket $@5 . T_OpenBracket lines T_CloseBracket

    T_OpenBracket  shift, and go to state 148


State 144

   37 structure_switch: T_Switch T_OpenSquareBracket T_Identificador T_CloseSquareBracket T_OpenBracket structure_cases . structure_default T_CloseBracket
   38 structure_cases: structure_cases . structure_case

    T_Let            shift, and go to state 5
    T_Import         shift, and go to state 6
    T_Print          shift, and go to state 7
    T_ReadLine       shift, and go to state 8
    T_For            shift, and go to state 9
    T_If             shift, and go to state 10
    T_While          shift, and go to state 11
    T_Switch         shift, and go to state 12
    T_Case           shift, and go to state 149
    T_Default        shift, and go to state 150
    T_Do             shift, and go to state 13
    T_Const          shift, and go to state 14
    T_EndLine        shift, and go to state 15
    T_Comment        shift, and go to state 16
    T_Identificador  shift, and go to state 17

    line                  go to state 151
    import                go to state 19
    variable_declaration  go to state 20
    attribution           go to state 21
    function_usage        go to state 22
    logical_structure     go to state 23
    structure_for         go to state 24
    structure_if          go to state 25
    structure_switch      go to state 26
    structure_case        go to state 152
    structure_default     go to state 153
    structure_while       go to state 27
    structure_do          go to state 28
    print                 go to state 29


State 145

   47 structure_do: T_Do T_OpenBracket lines T_CloseBracket T_While T_OpenSquareBracket . $@6 logical_expression T_CloseSquareBracket

    $default  reduce using rule 46 ($@6)

    $@6  go to state 154


State 146

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type T_Comma . type T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62

    type  go to state 155


State 147

    3 lines: lines . line
   34 structure_if: T_If T_OpenSquareBracket logical_expression T_CloseSquareBracket $@3 T_OpenBracket lines . T_CloseBracket

    T_Let            shift, and go to state 5
    T_Import         shift, and go to state 6
    T_Print          shift, and go to state 7
    T_ReadLine       shift, and go to state 8
    T_CloseBracket   shift, and go to state 156
    T_For            shift, and go to state 9
    T_If             shift, and go to state 10
    T_While          shift, and go to state 11
    T_Switch         shift, and go to state 12
    T_Do             shift, and go to state 13
    T_Const          shift, and go to state 14
    T_EndLine        shift, and go to state 15
    T_Comment        shift, and go to state 16
    T_Identificador  shift, and go to state 17

    line                  go to state 18
    import                go to state 19
    variable_declaration  go to state 20
    attribution           go to state 21
    function_usage        go to state 22
    logical_structure     go to state 23
    structure_for         go to state 24
    structure_if          go to state 25
    structure_switch      go to state 26
    structure_while       go to state 27
    structure_do          go to state 28
    print                 go to state 29


State 148

   45 structure_while: T_While T_OpenSquareBracket $@4 logical_expression T_CloseSquareBracket $@5 T_OpenBracket . lines T_CloseBracket

    $default  reduce using rule 4 (lines)

    lines  go to state 157


State 149

   40 structure_case: T_Case . T_OpenSquareBracket type T_CloseSquareBracket T_OpenBracket lines T_CloseBracket T_EndLine

    T_OpenSquareBracket  shift, and go to state 158


State 150

   42 structure_default: T_Default . T_OpenBracket lines T_CloseBracket T_EndLine

    T_OpenBracket  shift, and go to state 159


State 151

   41 structure_case: line .

    $default  reduce using rule 41 (structure_case)


State 152

   38 structure_cases: structure_cases structure_case .

    $default  reduce using rule 38 (structure_cases)


State 153

   37 structure_switch: T_Switch T_OpenSquareBracket T_Identificador T_CloseSquareBracket T_OpenBracket structure_cases structure_default . T_CloseBracket

    T_CloseBracket  shift, and go to state 160


State 154

   47 structure_do: T_Do T_OpenBracket lines T_CloseBracket T_While T_OpenSquareBracket $@6 . logical_expression T_CloseSquareBracket

    T_OpenParen      shift, and go to state 58
    T_Not            shift, and go to state 59
    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62
    T_Minus          shift, and go to state 63

    logical_expression  go to state 161
    expression          go to state 65
    type                go to state 66


State 155

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type T_Comma type . T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

    T_Comma  shift, and go to state 162


State 156

   34 structure_if: T_If T_OpenSquareBracket logical_expression T_CloseSquareBracket $@3 T_OpenBracket lines T_CloseBracket .

    $default  reduce using rule 34 (structure_if)


State 157

    3 lines: lines . line
   45 structure_while: T_While T_OpenSquareBracket $@4 logical_expression T_CloseSquareBracket $@5 T_OpenBracket lines . T_CloseBracket

    T_Let            shift, and go to state 5
    T_Import         shift, and go to state 6
    T_Print          shift, and go to state 7
    T_ReadLine       shift, and go to state 8
    T_CloseBracket   shift, and go to state 163
    T_For            shift, and go to state 9
    T_If             shift, and go to state 10
    T_While          shift, and go to state 11
    T_Switch         shift, and go to state 12
    T_Do             shift, and go to state 13
    T_Const          shift, and go to state 14
    T_EndLine        shift, and go to state 15
    T_Comment        shift, and go to state 16
    T_Identificador  shift, and go to state 17

    line                  go to state 18
    import                go to state 19
    variable_declaration  go to state 20
    attribution           go to state 21
    function_usage        go to state 22
    logical_structure     go to state 23
    structure_for         go to state 24
    structure_if          go to state 25
    structure_switch      go to state 26
    structure_while       go to state 27
    structure_do          go to state 28
    print                 go to state 29


State 158

   40 structure_case: T_Case T_OpenSquareBracket . type T_CloseSquareBracket T_OpenBracket lines T_CloseBracket T_EndLine

    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62

    type  go to state 164


State 159

   42 structure_default: T_Default T_OpenBracket . lines T_CloseBracket T_EndLine

    $default  reduce using rule 4 (lines)

    lines  go to state 165


State 160

   37 structure_switch: T_Switch T_OpenSquareBracket T_Identificador T_CloseSquareBracket T_OpenBracket structure_cases structure_default T_CloseBracket .

    $default  reduce using rule 37 (structure_switch)


State 161

   47 structure_do: T_Do T_OpenBracket lines T_CloseBracket T_While T_OpenSquareBracket $@6 logical_expression . T_CloseSquareBracket

    T_CloseSquareBracket  shift, and go to state 166


State 162

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type T_Comma type T_Comma . type T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

    T_IntValue       shift, and go to state 60
    T_FloatValue     shift, and go to state 61
    T_Identificador  shift, and go to state 62

    type  go to state 167


State 163

   45 structure_while: T_While T_OpenSquareBracket $@4 logical_expression T_CloseSquareBracket $@5 T_OpenBracket lines T_CloseBracket .

    $default  reduce using rule 45 (structure_while)


State 164

   40 structure_case: T_Case T_OpenSquareBracket type . T_CloseSquareBracket T_OpenBracket lines T_CloseBracket T_EndLine

    T_CloseSquareBracket  shift, and go to state 168


State 165

    3 lines: lines . line
   42 structure_default: T_Default T_OpenBracket lines . T_CloseBracket T_EndLine

    T_Let            shift, and go to state 5
    T_Import         shift, and go to state 6
    T_Print          shift, and go to state 7
    T_ReadLine       shift, and go to state 8
    T_CloseBracket   shift, and go to state 169
    T_For            shift, and go to state 9
    T_If             shift, and go to state 10
    T_While          shift, and go to state 11
    T_Switch         shift, and go to state 12
    T_Do             shift, and go to state 13
    T_Const          shift, and go to state 14
    T_EndLine        shift, and go to state 15
    T_Comment        shift, and go to state 16
    T_Identificador  shift, and go to state 17

    line                  go to state 18
    import                go to state 19
    variable_declaration  go to state 20
    attribution           go to state 21
    function_usage        go to state 22
    logical_structure     go to state 23
    structure_for         go to state 24
    structure_if          go to state 25
    structure_switch      go to state 26
    structure_while       go to state 27
    structure_do          go to state 28
    print                 go to state 29


State 166

   47 structure_do: T_Do T_OpenBracket lines T_CloseBracket T_While T_OpenSquareBracket $@6 logical_expression T_CloseSquareBracket .

    $default  reduce using rule 47 (structure_do)


State 167

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type T_Comma type T_Comma type . T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

    T_CloseParen  shift, and go to state 170


State 168

   40 structure_case: T_Case T_OpenSquareBracket type T_CloseSquareBracket . T_OpenBracket lines T_CloseBracket T_EndLine

    T_OpenBracket  shift, and go to state 171


State 169

   42 structure_default: T_Default T_OpenBracket lines T_CloseBracket . T_EndLine

    T_EndLine  shift, and go to state 172


State 170

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type T_Comma type T_Comma type T_CloseParen . T_CloseSquareBracket T_OpenBracket lines T_CloseBracket

    T_CloseSquareBracket  shift, and go to state 173


State 171

   40 structure_case: T_Case T_OpenSquareBracket type T_CloseSquareBracket T_OpenBracket . lines T_CloseBracket T_EndLine

    $default  reduce using rule 4 (lines)

    lines  go to state 174


State 172

   42 structure_default: T_Default T_OpenBracket lines T_CloseBracket T_EndLine .

    $default  reduce using rule 42 (structure_default)


State 173

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type T_Comma type T_Comma type T_CloseParen T_CloseSquareBracket . T_OpenBracket lines T_CloseBracket

    T_OpenBracket  shift, and go to state 175


State 174

    3 lines: lines . line
   40 structure_case: T_Case T_OpenSquareBracket type T_CloseSquareBracket T_OpenBracket lines . T_CloseBracket T_EndLine

    T_Let            shift, and go to state 5
    T_Import         shift, and go to state 6
    T_Print          shift, and go to state 7
    T_ReadLine       shift, and go to state 8
    T_CloseBracket   shift, and go to state 176
    T_For            shift, and go to state 9
    T_If             shift, and go to state 10
    T_While          shift, and go to state 11
    T_Switch         shift, and go to state 12
    T_Do             shift, and go to state 13
    T_Const          shift, and go to state 14
    T_EndLine        shift, and go to state 15
    T_Comment        shift, and go to state 16
    T_Identificador  shift, and go to state 17

    line                  go to state 18
    import                go to state 19
    variable_declaration  go to state 20
    attribution           go to state 21
    function_usage        go to state 22
    logical_structure     go to state 23
    structure_for         go to state 24
    structure_if          go to state 25
    structure_switch      go to state 26
    structure_while       go to state 27
    structure_do          go to state 28
    print                 go to state 29


State 175

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type T_Comma type T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket . lines T_CloseBracket

    $default  reduce using rule 4 (lines)

    lines  go to state 177


State 176

   40 structure_case: T_Case T_OpenSquareBracket type T_CloseSquareBracket T_OpenBracket lines T_CloseBracket . T_EndLine

    T_EndLine  shift, and go to state 178


State 177

    3 lines: lines . line
   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type T_Comma type T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket lines . T_CloseBracket

    T_Let            shift, and go to state 5
    T_Import         shift, and go to state 6
    T_Print          shift, and go to state 7
    T_ReadLine       shift, and go to state 8
    T_CloseBracket   shift, and go to state 179
    T_For            shift, and go to state 9
    T_If             shift, and go to state 10
    T_While          shift, and go to state 11
    T_Switch         shift, and go to state 12
    T_Do             shift, and go to state 13
    T_Const          shift, and go to state 14
    T_EndLine        shift, and go to state 15
    T_Comment        shift, and go to state 16
    T_Identificador  shift, and go to state 17

    line                  go to state 18
    import                go to state 19
    variable_declaration  go to state 20
    attribution           go to state 21
    function_usage        go to state 22
    logical_structure     go to state 23
    structure_for         go to state 24
    structure_if          go to state 25
    structure_switch      go to state 26
    structure_while       go to state 27
    structure_do          go to state 28
    print                 go to state 29


State 178

   40 structure_case: T_Case T_OpenSquareBracket type T_CloseSquareBracket T_OpenBracket lines T_CloseBracket T_EndLine .

    $default  reduce using rule 40 (structure_case)


State 179

   32 structure_for: T_For T_OpenSquareBracket T_Identificador T_doubleDot T_OpenParen type T_Comma type T_Comma type T_CloseParen T_CloseSquareBracket T_OpenBracket lines T_CloseBracket .

    $default  reduce using rule 32 (structure_for)
